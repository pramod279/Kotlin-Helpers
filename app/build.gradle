apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'io.fabric'
apply plugin: 'com.google.gms.google-services'

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion build_version.target_sdk

    defaultConfig {
        applicationId app_info.applicationID
        minSdkVersion build_version.min_sdk
        targetSdkVersion build_version.target_sdk
        versionCode app_info.release_version_code
        versionName app_info.release_version_name
    }

    signingConfigs {
        releaseConfig {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }

    buildTypes {
        release {
            debuggable false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.releaseConfig
        }
    }

    // Specifies one flavor dimension.
    flavorDimensions "default"
    productFlavors {
        /*Development Flavor*/
        develop {
            versionNameSuffix " - Develop"
            signingConfig signingConfigs.releaseConfig
        }

        /*QA Flavor*/
        staging {
            versionNameSuffix " - QA"
            signingConfig signingConfigs.releaseConfig
        }

        /*Production Flavor*/
        production {
            versionNameSuffix " - Production"
            signingConfig signingConfigs.releaseConfig
        }
    }

    /*APK Name*/
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "$app_info.applicationName - v${variant.versionName}.apk"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    /*Kotlin Library*/
    implementation(deps.kotlin.kotlin)
    /*KTK Library*/
    implementation(deps.androidKTX.KTX)
    /*Support Library Declarations*/
    implementation(deps.android_x.appcompat)
    implementation(deps.android_x.recyclerview)
    implementation(deps.android_x.cardview)
    implementation(deps.android_x.constraintLayout)
    /*Crashlytics Support Libraries --> Fabrics & Firebase*/
    implementation(deps.crashlytics.firebaseCrash)
    implementation("com.crashlytics.sdk.android:crashlytics:$deps_version.crashlytics") {
        transitive = true
    }
}